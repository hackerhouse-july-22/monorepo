/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Intermediaire,
  IntermediaireInterface,
} from "../../ExperimentDeployGnosis.s.sol/Intermediaire";

const _abi = [
  {
    inputs: [],
    name: "doIt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080546001600160a01b031990811673a6b71e26c5e0845f74c812102ca7114b6a896ab217909155600180548216733e5c63644e683549055b9be8653de26e0b4cd36e1790556002805490911673bb792907af585c19c9d0132a5fd209878dac3e8f17905534801561007657600080fd5b506103aa806100866000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b29f083514610030575b600080fd5b61003861003a565b005b6040805160018082528183019092526060916000919060208083019080368337505060025482519293506001600160a01b031691839150600090610080576100806101f9565b60200260200101906001600160a01b031690816001600160a01b031681525050600063b63e800d60e01b8260016000866000806000806040516024016100cd98979695949392919061025c565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092526000805460015493516361b69abd60e01b815292945090926001600160a01b03918216926361b69abd926101399216908690600401610318565b6020604051808303816000875af1158015610158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017c9190610344565b90506101878161018d565b50505050565b6040516001600160a01b03821660248201526101d59060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526101d8565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561023557602081850181015186830182015201610219565b81811115610247576000602083870101525b50601f01601f19169290920160200192915050565b6101008082528951908201819052600090610120830190602090818d01845b828110156102a05781516001600160a01b03168552938301939083019060010161027b565b50505060ff8b16908401526001600160a01b038916604084015282810360608401526102cc818961020f565b9150506102e460808301876001600160a01b03169052565b6001600160a01b03851660a083015260ff841660c08301526001600160a01b03831660e08301529998505050505050505050565b6001600160a01b038316815260406020820181905260009061033c9083018461020f565b949350505050565b60006020828403121561035657600080fd5b81516001600160a01b038116811461036d57600080fd5b939250505056fea26469706673582212204e6fa2ee858eeb2d24a03e8e8e8ad3b3624bb56e7347b40785381973a40dec6164736f6c634300080f0033";

type IntermediaireConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IntermediaireConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Intermediaire__factory extends ContractFactory {
  constructor(...args: IntermediaireConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Intermediaire> {
    return super.deploy(overrides || {}) as Promise<Intermediaire>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Intermediaire {
    return super.attach(address) as Intermediaire;
  }
  override connect(signer: Signer): Intermediaire__factory {
    return super.connect(signer) as Intermediaire__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IntermediaireInterface {
    return new utils.Interface(_abi) as IntermediaireInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Intermediaire {
    return new Contract(address, _abi, signerOrProvider) as Intermediaire;
  }
}
