/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SimulateTxAccessor,
  SimulateTxAccessorInterface,
} from "../SimulateTxAccessor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "simulate",
    outputs: [
      {
        internalType: "uint256",
        name: "estimate",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b503060805260805161035e61002f6000396000606a015261035e6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631c5fb21114610030575b600080fd5b61004361003e3660046101db565b61005b565b60405161005293929190610287565b60405180910390f35b60008060606001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101025760405162461bcd60e51b815260206004820152603960248201527f53696d756c61746554784163636573736f722073686f756c64206f6e6c79206260448201527f652063616c6c6564207669612064656c656761746563616c6c00000000000000606482015260840160405180910390fd5b60005a905061014a898989898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508b925050505a610180565b92505a61015790826102ed565b935060405160203d0181016040523d81523d6000602083013e8092505050955095509592505050565b6000600183600181111561019657610196610312565b036101ae576000808551602087018986f490506101be565b600080855160208701888a87f190505b95945050505050565b8035600281106101d657600080fd5b919050565b6000806000806000608086880312156101f357600080fd5b85356001600160a01b038116811461020a57600080fd5b945060208601359350604086013567ffffffffffffffff8082111561022e57600080fd5b818801915088601f83011261024257600080fd5b81358181111561025157600080fd5b89602082850101111561026357600080fd5b60208301955080945050505061027b606087016101c7565b90509295509295909350565b838152600060208415158184015260606040840152835180606085015260005b818110156102c3578581018301518582016080015282016102a7565b818111156102d5576000608083870101525b50601f01601f19169290920160800195945050505050565b60008282101561030d57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220dd17867ad96614796441bded19570a016e92447549f2c00ad4b11173151930a364736f6c634300080f0033";

type SimulateTxAccessorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimulateTxAccessorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimulateTxAccessor__factory extends ContractFactory {
  constructor(...args: SimulateTxAccessorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimulateTxAccessor> {
    return super.deploy(overrides || {}) as Promise<SimulateTxAccessor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimulateTxAccessor {
    return super.attach(address) as SimulateTxAccessor;
  }
  override connect(signer: Signer): SimulateTxAccessor__factory {
    return super.connect(signer) as SimulateTxAccessor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimulateTxAccessorInterface {
    return new utils.Interface(_abi) as SimulateTxAccessorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimulateTxAccessor {
    return new Contract(address, _abi, signerOrProvider) as SimulateTxAccessor;
  }
}
